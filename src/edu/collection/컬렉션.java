package edu.collection;

/**
 * 클래스, 추상클래스의 상속키워드 : extends (문서를 확장하다)
 *                                => 필드, 생성자 기준의 문서
 * 인터페이스 상속키워드 : implements (문서에 존재하는 기능을 구현하다)
 *                                => 메서드(기능) 기준의 문서
 *                                => 필드를 작성할 수 있으나, 상수형 필드(public static final)만 작성 가능
 *                                   필드 명칭 앞에 public static final 을 작성하지 않아도 묵시적으로 인식됨.
 *                                   기능 또한
 *                                              'void 메서드명();'
 *                                              '자료형 메서드명();'   과 같은 형식으로 작성해도
 *                                    묵시적으로 public abstract 로 작성된다.
 *                                    메서드명() 뒤에 중괄호{}를 작성할 수 없다!!!
 *
 * 컬렉션은 인터페이스 - 클래스 형태
 * 컬렉션 프레임워크 : Java 개발자들이 Java 를 사용하는 개발자들을 위해 자료구조를 만들어 모아둔 것
 *                    프레임워크) 데이터를 저장하고 조작하는 표준화된 방법을 제공하는 핵심 라이브러리
 * ＞ 특징
 *      1) 크기 제한 없음 (부족하면 자동으로 증가, 감소하면 자동으로 개수 감소)
 *      2) 따로 설치할 필요 없이 java.util 폴더 내에 모두 존재함.
 *      3) 추가, 수정, 삭제, 검색 등 다양한 기능이 구현되어 있음
 *      4) 객체만 저장 가능
 *          => 기본자료형(int, boolean, double, long, char, short, byte, float 등)을
 *                   Integer, Boolean, Double, Long, Character, Short, Byte, Float
 *             을 위와 같은 객체 형태로 만들어 사용하기도 함.
 *
 * 컬렉션의 대표적인 프레임워크로 List 인터페이스가 존재!
 *            ⭐                        ⭐
 *  -> ⭐⭐ List 를 기반으로 만들어진 ArrayList 객체를 주로 활용. (매우 중요!!!) ⭐⭐
 *
 * ---------------------------------------------------------------------------
 * 프레임워크와 라이브러리 모두 개발하고자 하는 모든 개발자들이 편리하게 사용할 수 있도록 기능별로 분리해놓은 코드모음 문서.
 * 둘 다 코드의 도서관 같은 존재!
 *  차이점)
 * - 프레임워크 ： 프레임워크가 개발자 코드를 제어함. => 코드계의 밀키트
 *                특정 기능을 만들기 위해 구조와 틀이 정해져있고, 정해진 구조와 틀 내에서 개발해야 함.
 *                ex) Java Spring, React, Express(Java가 아닌 JavaScript로 백엔드를 개발하는 서버관리)
 * - 라이브러리 : 개발자가 필요할 때 호출함.         => 뷔페
 *               특정 기능을 만들기 위해 정해진 틀 없이 주어지는 기능들을 개발자가 원하는 대로 커스텀하여 개발할 수 있음.
 *               ex) jQuery
 *               
 * 라이브러리는 내가 기능을 호출하고, 프레임워크는 기능이 나를 호출한다..는 느낌
 * ---------------------------------------------------------------------------
 */
public class 컬렉션 {
}
